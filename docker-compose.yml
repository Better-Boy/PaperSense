services:
  db:
    image: ankane/pgvector
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      bash -c "
        docker-entrypoint.sh postgres &

        echo '‚è≥ Waiting for PostgreSQL to be ready...'
        until pg_isready -h localhost -p 5432; do sleep 1; done

        echo 'üîç Checking if database \"arxiv_psql_db\" exists...'
        if psql -U postgres -d postgres -tAc \"SELECT 1 FROM pg_database WHERE datname = 'arxiv_psql_db'\" | grep -q 1; then
          echo '‚úÖ Database \"arxiv_psql_db\" already exists.'
        else
          echo 'üì¶ Creating database \"arxiv_psql_db\"...'
          createdb -U postgres arxiv_psql_db
        fi

        echo 'üîç Checking if database \"pgvec_db\" exists...'
        if psql -U postgres -d postgres -tAc \"SELECT 1 FROM pg_database WHERE datname = 'pgvec_db'\" | grep -q 1; then
          echo '‚úÖ Database \"pgvec_db\" already exists.'
        else
          echo 'üì¶ Creating database \"pgvec_db\"...'
          createdb -U postgres pgvec_db
        fi

        wait
      "

  mindsdb:
    image: mindsdb/mindsdb
    container_name: mindsdb
    depends_on:
      - db
    ports:
      - "47334:47334"
      - "47335:47335"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:47334/api/status"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

  webapp:
    build:
      context: .
    container_name: webapp
    ports:
      - "8000:8000"
    depends_on:
      mindsdb:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      MINDSDB_HOST: mindsdb
      MINDSDB_PORT: 47334

volumes:
  postgres_data: